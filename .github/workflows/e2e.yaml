name: e2e_tests

on: [workflow_call]

env:
  DEKART_POSTGRES_PASSWORD: dekart
  DEKART_POSTGRES_USER: postgres
  DEKART_POSTGRES_DB: dekart
  GOOGLE_APPLICATION_CREDENTIALS: GOOGLE_APPLICATION_CREDENTIALS.json
  AWS_REGION: us-east-1
  IMAGE_PATH: /tmp/e2etest.tar
  IMAGE_CACHE_KEY: e2etest-${{ github.run_id }}-${{ github.run_attempt }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Create .npmrc
        run: |
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.NPM_GH_TOKEN }}" > .npmrc
          echo "@dekart-xyz:registry=https://npm.pkg.github.com" >> .npmrc
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: E2E build
        uses: docker/build-push-action@v4
        with:
          context: .
          push: false
          outputs: type=docker,dest=${{ env.IMAGE_PATH }}
          load: true
          tags: e2etest:latest
          target: e2etest
          cache-from: type=gha,scope=dekart
          cache-to: type=gha,mode=max,scope=dekart
      - name: Cache docker image
        uses: actions/cache@v3
        with:
          path: ${{ env.IMAGE_PATH }}
          key: ${{ env.IMAGE_CACHE_KEY }}
  cloud:
    runs-on: ubuntu-latest
    needs: build
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{ env.DEKART_POSTGRES_PASSWORD }}
          POSTGRES_USER: ${{ env.DEKART_POSTGRES_USER }}
          POSTGRES_DB: ${{ env.DEKART_POSTGRES_DB }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Load Docker image from cache
        uses: actions/cache/restore@v3
        with:
          path: ${{ env.IMAGE_PATH }}
          key: ${{ env.IMAGE_CACHE_KEY }}
          fail-on-cache-miss: true
      - name: Load Docker image
        run: |
          docker load --input ${{ env.IMAGE_PATH }}
          docker image ls -a
      - name: E2E test
        run: |
          docker run -i \
            --network="host" \
            -v /tmp/cypress/videos:/dekart/cypress/videos/ \
          	-v /tmp/cypress/screenshots:/dekart/cypress/screenshots/ \
            -e DEKART_POSTGRES_USER=$DEKART_POSTGRES_USER \
            -e DEKART_POSTGRES_PASSWORD=$DEKART_POSTGRES_PASSWORD \
            -e DEKART_POSTGRES_PORT=$DEKART_POSTGRES_PORT \
            -e DEKART_POSTGRES_HOST=localhost \
            -e DEKART_ALLOW_FILE_UPLOAD=1 \
            -e DEKART_REQUIRE_GOOGLE_OAUTH=1 \
            -e DEKART_GOOGLE_OAUTH_CLIENT_ID=${{ secrets.GOOGLE_OAUTH_CLIENT_ID }} \
            -e DEKART_GOOGLE_OAUTH_SECRET=${{ secrets.GOOGLE_OAUTH_SECRET }} \
            -e DEKART_DEV_REFRESH_TOKEN=${{ secrets.DEV_REFRESH_TOKEN }} \
            -e TEST_SPEC=cypress/e2e/bq \
            -e CYPRESS_CI=1 \
            e2etest:latest
      - name: Upload cypress artifacts
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: bigquery
          path: /tmp/cypress
