name: e2e_tests

on: [workflow_call]

env:
  DEKART_POSTGRES_PASSWORD: dekart
  DEKART_POSTGRES_USER: postgres
  DEKART_POSTGRES_DB: dekart
  IMAGE_CACHE_KEY: e2etest-${{ github.run_id }}-${{ github.run_attempt }}

jobs:
  cloud:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: ${{ env.DEKART_POSTGRES_PASSWORD }}
          POSTGRES_USER: ${{ env.DEKART_POSTGRES_USER }}
          POSTGRES_DB: ${{ env.DEKART_POSTGRES_DB }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0
        with:
          service_account_key: ${{ secrets.PRIVATE_GITHUB_ACTIONS_DEKART_CLOUD }}
          project_id: dekart-cloud
      - name: Configure Docker to use the gcloud command-line tool as a credential helper
        run: gcloud auth configure-docker europe-west3-docker.pkg.dev
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: E2E test
        run: |
          docker run -i \
            --network="host" \
            -v /tmp/cypress/videos:/dekart/cypress/videos/ \
            -v /tmp/cypress/screenshots:/dekart/cypress/screenshots/ \
            -e DEKART_POSTGRES_USER=$DEKART_POSTGRES_USER \
            -e DEKART_POSTGRES_PASSWORD=$DEKART_POSTGRES_PASSWORD \
            -e DEKART_POSTGRES_PORT=$DEKART_POSTGRES_PORT \
            -e DEKART_POSTGRES_HOST=localhost \
            -e DEKART_ALLOW_FILE_UPLOAD=1 \
            -e DEKART_REQUIRE_GOOGLE_OAUTH=1 \
            -e DEKART_GOOGLE_OAUTH_CLIENT_ID=${{ secrets.GOOGLE_OAUTH_CLIENT_ID }} \
            -e DEKART_GOOGLE_OAUTH_SECRET=${{ secrets.GOOGLE_OAUTH_SECRET }} \
            -e DEKART_DEV_REFRESH_TOKEN=${{ secrets.DEV_REFRESH_TOKEN }} \
            -e TEST_SPEC=cypress/e2e/bq \
            -e CYPRESS_CI=1 \
            europe-west3-docker.pkg.dev/dekart-cloud/dekart/dekart:${{ env.IMAGE_CACHE_KEY }}
      - name: Upload cypress artifacts
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: bigquery
          path: /tmp/cypress
